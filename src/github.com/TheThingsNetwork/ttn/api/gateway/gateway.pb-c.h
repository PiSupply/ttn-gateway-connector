/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: github.com/TheThingsNetwork/ttn/api/gateway/gateway.proto */

#ifndef PROTOBUF_C_github_2ecom_2fTheThingsNetwork_2fttn_2fapi_2fgateway_2fgateway_2eproto__INCLUDED
#define PROTOBUF_C_github_2ecom_2fTheThingsNetwork_2fttn_2fapi_2fgateway_2fgateway_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1000000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1002001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif

#include "github.com/gogo/protobuf/gogoproto/gogo.pb-c.h"

typedef struct _Gateway__GPSMetadata Gateway__GPSMetadata;
typedef struct _Gateway__RxMetadata Gateway__RxMetadata;
typedef struct _Gateway__TxConfiguration Gateway__TxConfiguration;
typedef struct _Gateway__Status Gateway__Status;
typedef struct _Gateway__Status__OSMetrics Gateway__Status__OSMetrics;


/* --- enums --- */


/* --- messages --- */

struct  _Gateway__GPSMetadata
{
  ProtobufCMessage base;
  /*
   * Time in Unix nanoseconds
   */
  protobuf_c_boolean has_time;
  int64_t time;
  protobuf_c_boolean has_latitude;
  float latitude;
  protobuf_c_boolean has_longitude;
  float longitude;
  protobuf_c_boolean has_altitude;
  int32_t altitude;
};
#define GATEWAY__GPSMETADATA__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&gateway__gpsmetadata__descriptor) \
    , 0,0, 0,0, 0,0, 0,0 }


struct  _Gateway__RxMetadata
{
  ProtobufCMessage base;
  char *gateway_id;
  /*
   * Timestamp (uptime of LoRa module) in microseconds with rollover
   */
  protobuf_c_boolean has_timestamp;
  uint32_t timestamp;
  /*
   * Time in Unix nanoseconds
   */
  protobuf_c_boolean has_time;
  int64_t time;
  protobuf_c_boolean has_rf_chain;
  uint32_t rf_chain;
  protobuf_c_boolean has_channel;
  uint32_t channel;
  /*
   * Frequency in Hz
   */
  protobuf_c_boolean has_frequency;
  uint64_t frequency;
  /*
   * Received signal strength in dBm
   */
  protobuf_c_boolean has_rssi;
  float rssi;
  /*
   * Signal-to-noise-ratio in dB
   */
  protobuf_c_boolean has_snr;
  float snr;
  Gateway__GPSMetadata *gps;
};
#define GATEWAY__RX_METADATA__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&gateway__rx_metadata__descriptor) \
    , NULL, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, 0,0, NULL }


struct  _Gateway__TxConfiguration
{
  ProtobufCMessage base;
  /*
   * Timestamp (uptime of LoRa module) in microseconds with rollover
   */
  protobuf_c_boolean has_timestamp;
  uint32_t timestamp;
  protobuf_c_boolean has_rf_chain;
  uint32_t rf_chain;
  /*
   * Frequency in Hz
   */
  protobuf_c_boolean has_frequency;
  uint64_t frequency;
  /*
   * Transmit power in dBm
   */
  protobuf_c_boolean has_power;
  int32_t power;
  /*
   * LoRa polarization inversion (basically always true for messages from gateway to node)
   */
  protobuf_c_boolean has_polarization_inversion;
  protobuf_c_boolean polarization_inversion;
  /*
   * FSK frequency deviation in Hz
   */
  protobuf_c_boolean has_frequency_deviation;
  uint32_t frequency_deviation;
};
#define GATEWAY__TX_CONFIGURATION__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&gateway__tx_configuration__descriptor) \
    , 0,0, 0,0, 0,0, 0,0, 0,0, 0,0 }


/*
 * Additional metrics from the operating system
 */
struct  _Gateway__Status__OSMetrics
{
  ProtobufCMessage base;
  protobuf_c_boolean has_load_1;
  float load_1;
  protobuf_c_boolean has_load_5;
  float load_5;
  protobuf_c_boolean has_load_15;
  float load_15;
  protobuf_c_boolean has_cpu_percentage;
  float cpu_percentage;
  protobuf_c_boolean has_memory_percentage;
  float memory_percentage;
  protobuf_c_boolean has_temperature;
  float temperature;
};
#define GATEWAY__STATUS__OSMETRICS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&gateway__status__osmetrics__descriptor) \
    , 0,0, 0,0, 0,0, 0,0, 0,0, 0,0 }


/*
 * message Status represents a status update from a Gateway.
 */
struct  _Gateway__Status
{
  ProtobufCMessage base;
  /*
   * Timestamp (uptime of gateway) in microseconds with rollover
   */
  protobuf_c_boolean has_timestamp;
  uint32_t timestamp;
  /*
   * Time in Unix nanoseconds
   */
  protobuf_c_boolean has_time;
  int64_t time;
  size_t n_ip;
  char **ip;
  char *platform;
  char *contact_email;
  char *description;
  /*
   * The gateway's region: one of EU_863_870, US_902_928, CN_779_787, EU_433, AU_915_928, CN_470_510, AS_923, KR_920_923
   */
  char *region;
  /*
   * The value of Bridge is set by the Bridge
   */
  char *bridge;
  /*
   * The value of Router is set by the Router
   */
  char *router;
  Gateway__GPSMetadata *gps;
  /*
   * Round-trip time to the server in milliseconds
   */
  protobuf_c_boolean has_rtt;
  uint32_t rtt;
  /*
   * Total number of received uplink packets since boot
   */
  protobuf_c_boolean has_rx_in;
  uint32_t rx_in;
  /*
   * Total number of successful (correct) uplink packets since boot
   */
  protobuf_c_boolean has_rx_ok;
  uint32_t rx_ok;
  /*
   * Total number of received downlink packets since boot
   */
  protobuf_c_boolean has_tx_in;
  uint32_t tx_in;
  /*
   * Total number of successfully sent downlink packets since boot
   */
  protobuf_c_boolean has_tx_ok;
  uint32_t tx_ok;
  Gateway__Status__OSMetrics *os;
};
#define GATEWAY__STATUS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&gateway__status__descriptor) \
    , 0,0, 0,0, 0,NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL, 0,0, 0,0, 0,0, 0,0, 0,0, NULL }


/* Gateway__GPSMetadata methods */
void   gateway__gpsmetadata__init
                     (Gateway__GPSMetadata         *message);
size_t gateway__gpsmetadata__get_packed_size
                     (const Gateway__GPSMetadata   *message);
size_t gateway__gpsmetadata__pack
                     (const Gateway__GPSMetadata   *message,
                      uint8_t             *out);
size_t gateway__gpsmetadata__pack_to_buffer
                     (const Gateway__GPSMetadata   *message,
                      ProtobufCBuffer     *buffer);
Gateway__GPSMetadata *
       gateway__gpsmetadata__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   gateway__gpsmetadata__free_unpacked
                     (Gateway__GPSMetadata *message,
                      ProtobufCAllocator *allocator);
/* Gateway__RxMetadata methods */
void   gateway__rx_metadata__init
                     (Gateway__RxMetadata         *message);
size_t gateway__rx_metadata__get_packed_size
                     (const Gateway__RxMetadata   *message);
size_t gateway__rx_metadata__pack
                     (const Gateway__RxMetadata   *message,
                      uint8_t             *out);
size_t gateway__rx_metadata__pack_to_buffer
                     (const Gateway__RxMetadata   *message,
                      ProtobufCBuffer     *buffer);
Gateway__RxMetadata *
       gateway__rx_metadata__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   gateway__rx_metadata__free_unpacked
                     (Gateway__RxMetadata *message,
                      ProtobufCAllocator *allocator);
/* Gateway__TxConfiguration methods */
void   gateway__tx_configuration__init
                     (Gateway__TxConfiguration         *message);
size_t gateway__tx_configuration__get_packed_size
                     (const Gateway__TxConfiguration   *message);
size_t gateway__tx_configuration__pack
                     (const Gateway__TxConfiguration   *message,
                      uint8_t             *out);
size_t gateway__tx_configuration__pack_to_buffer
                     (const Gateway__TxConfiguration   *message,
                      ProtobufCBuffer     *buffer);
Gateway__TxConfiguration *
       gateway__tx_configuration__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   gateway__tx_configuration__free_unpacked
                     (Gateway__TxConfiguration *message,
                      ProtobufCAllocator *allocator);
/* Gateway__Status__OSMetrics methods */
void   gateway__status__osmetrics__init
                     (Gateway__Status__OSMetrics         *message);
/* Gateway__Status methods */
void   gateway__status__init
                     (Gateway__Status         *message);
size_t gateway__status__get_packed_size
                     (const Gateway__Status   *message);
size_t gateway__status__pack
                     (const Gateway__Status   *message,
                      uint8_t             *out);
size_t gateway__status__pack_to_buffer
                     (const Gateway__Status   *message,
                      ProtobufCBuffer     *buffer);
Gateway__Status *
       gateway__status__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   gateway__status__free_unpacked
                     (Gateway__Status *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Gateway__GPSMetadata_Closure)
                 (const Gateway__GPSMetadata *message,
                  void *closure_data);
typedef void (*Gateway__RxMetadata_Closure)
                 (const Gateway__RxMetadata *message,
                  void *closure_data);
typedef void (*Gateway__TxConfiguration_Closure)
                 (const Gateway__TxConfiguration *message,
                  void *closure_data);
typedef void (*Gateway__Status__OSMetrics_Closure)
                 (const Gateway__Status__OSMetrics *message,
                  void *closure_data);
typedef void (*Gateway__Status_Closure)
                 (const Gateway__Status *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor gateway__gpsmetadata__descriptor;
extern const ProtobufCMessageDescriptor gateway__rx_metadata__descriptor;
extern const ProtobufCMessageDescriptor gateway__tx_configuration__descriptor;
extern const ProtobufCMessageDescriptor gateway__status__descriptor;
extern const ProtobufCMessageDescriptor gateway__status__osmetrics__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_github_2ecom_2fTheThingsNetwork_2fttn_2fapi_2fgateway_2fgateway_2eproto__INCLUDED */
